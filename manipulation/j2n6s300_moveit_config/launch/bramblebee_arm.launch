<launch>

  <param name="robot_type" value="j2n6s300" />
  <param name="/pick_place_demo/arm/solve_type" value="Manipulation2" />
  <param name="/pick_place_demo/arm/kinematics_solver_timeout" value="0.05" />


  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find j2n6s300_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- Load and launch realsense camera -->
 <include file="$(find j2n6s300_moveit_config)/launch/bramblebee_realsense_camera.launch" />


  <!-- Run joint trajectory action server, which receives planned motion goal under "follow_joint_trajectory", and publish ROS standard trajectory via topic "command". Then for specified robot, the trajectory will be interpreted to their own joint trajectory controller -->
  <node name="j2n6s300_joint_trajectory_action_server" pkg="kinova_driver" type="joint_trajectory_action_server" output="screen" respawn="false" args="j2n6s300"/>


  <!-- kinova-driver Controller parameters-->
  <rosparam file="$(find j2n6s300_moveit_config)/config/controllers.yaml"/>

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find j2n6s300_moveit_config)/launch/move_group_j2n6s300.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="false"/>
    <arg name="info" value="true"/>
    <arg name="joint_states_ns" value="/j2n6s300_driver/out/joint_state"/>
    <arg name="controller_manager" value="j2n6s300"/>
  </include>

  </launch>
